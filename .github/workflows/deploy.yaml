name: publish

on:
  create:
    branches:
      - '!*'
    tags:
      - 'v*'

jobs:
  github-release:
    name: github-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo "VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV

      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          body: |
            ## Installation

            ### NPM

            ```console
            # npm
            npm i @capterqa/cli --save-dev

            # yarn
            yarn add @capterqa/cli --dev
            ```

            ### Cargo

            ```console
            $ cargo install capter --vers ${{ env.VERSION }}
            ```
          draft: false
          prerelease: true

  publish-binary:
    name: publish-binary-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: github-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   binary-suffix: .exe

          - os: macos-latest
            target: x86_64-apple-darwin

          # - os: macos-11.0
          #   target: arm64-apple-darwin

    steps:
      - uses: actions/checkout@v2

      - run: echo "VERSION=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: build
        run: cargo build --release --locked

      - name: strip binary
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: strip target/release/capter

      - name: upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/capter${{ matrix.binary-suffix }}
          asset_name: capter-${{ env.VERSION }}-${{ matrix.target }}${{ matrix.binary-suffix }}
          tag: ${{ env.VERSION }}

  publish-crate:
    name: publish-crate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: publish
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
